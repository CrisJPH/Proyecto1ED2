//definir pines de segmentos
const int segmentPins[] ={sega, segb, segc, segd, sege, segf, segg};
//AdafruitIO_Feed *tempvalor = io.feed("proyecto11ED2");

//esto sirve para encender los segmentos necesarios para que se muestren como los numeros del 0 al 9
const int digits[10][7] = {
  {1, 1, 1, 1, 1, 1, 0}, // 0
  {0, 1, 1, 0, 0, 0, 0}, // 1
  {1, 1, 0, 1, 1, 0, 1}, // 2
  {1, 1, 1, 1, 0, 0, 1}, // 3
  {0, 1, 1, 0, 0, 1, 1}, // 4
  {1, 0, 1, 1, 0, 1, 1}, // 5
  {1, 0, 1, 1, 1, 1, 1}, // 6
  {1, 1, 1, 0, 0, 0, 0}, // 7
  {1, 1, 1, 1, 1, 1, 1}, // 8
  {1, 1, 1, 1, 0, 1, 1}  // 9
};

// Función para mostrar un dígito en el display
void displayDigit(int display, int digit, bool showDecimalPoint) {
  // Activa el display especificado (display1, display2, display3) dependiendo del valor de 'display'.
  // Solo uno de los displays será encendido a la vez, los otros estarán apagados.
  digitalWrite(display1, display == 1); 
  digitalWrite(display2, display == 2);
  digitalWrite(display3, display == 3);

 // Este `for` sirve para recorrer cada uno de los segmentos del display de 7 segmentos.
  // Se encienden o apagan los pines de los segmentos de acuerdo al valor binario correspondiente al dígito que se desea mostrar
  for (int i = 0; i < 7; i++) {
    digitalWrite(segmentPins[i], digits[digit][i]);
  }
  // Controla si el punto decimal del display debe mostrarse o no.
  digitalWrite(segp, showDecimalPoint);
}

// Función para mostrar el valor de temperatura en el display de 7 segmentos
void displaymostrar(float temp) {
  int digit1 = (int)temp / 10;             // Decenas
  int digit2 = (int)temp % 10;             // Unidades
  int digit3 = (int)(temp * 10) % 10;      // Décimas

  displayDigit(1, digit1, false);  // Display 1 sin punto decimal
  delay(5);
  displayDigit(2, digit2, true);   // Display 2 con punto decimal
  delay(5);
  displayDigit(3, digit3, false);  // Display 3 sin punto decimal
  delay(5);
}
